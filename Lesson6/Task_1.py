# Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
# Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

# Python 3.9.2
# Windows 10 x64

import sys


def size_calc(var_list):
    """Добавил функцию, которая принимает список использованных переменных и считает их размер."""
    total_size = 0
    for el in var_list:
        print(sys.getsizeof(el))
        total_size += sys.getsizeof(el)
    return total_size


# Урок 1, Задание 2. Выполнить логические побитовые операции «И», «ИЛИ» и др. над числами 5 и 6.
# Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака. Объяснить полученный результат.

num_1 = 5
num_2 = 6

# or
bit_or = num_1 | num_2
# xor
bit_xor = num_1 ^ num_2
# and
bit_and = num_1 & num_2
# сдвиг вправо на 2
shift_right = num_1 >> 2
# сдвиг влево на 2
shift_left = num_1 << 2

used_vars1 = [num_1, num_2, bit_or, bit_xor, bit_and, shift_right, shift_left]

# В этой задаче было выделено 196 байт под переменные
print(f'Под переменные выделено: {size_calc(used_vars1)} байт')
# ------------------------------------------------------------------------------------------------------

# Урок 3, Задание 1. В диапазоне натуральных чисел от 2 до 99 определить,
# сколько из них кратны каждому из чисел в диапазоне от 2 до 9.
num_dict = {}

for num in range(2, 10):
    num_dict[num] = []
    for i in range(2, 100):
        if i % num == 0:
            num_dict[num].append(i)
    # print(f'Для числа {num} кратны: {len(num_dict[num])} чисел. Это: {num_dict[num]}')

# PyCharm ругается на обращение извне к переменным внутри цикла, но, думаю, для наших целей это приемлимо
used_vars2 = [num, i, num_dict]
# В этой задаче было выделено 416 байт под переменные
print(f'Под переменные выделено: {size_calc(used_vars2)} байт')
# ------------------------------------------------------------------------------------------------------

# Урок 3, Задание 8. Матрица 5x4 заполняется вводом с клавиатуры кроме последних элементов строк.
# Программа должна вычислять сумму введенных элементов каждой строки и записывать ее в последнюю ячейку строки.
# В конце следует вывести полученную матрицу.

matrix = []

for i in range(4):
    matrix.append([])
    summ = 0
    for i2 in range(4):
        # input_number = int(input(f'Введите {i2 + 1} элемент столбца {i + 1}: '))
        # Вместо ручного ввода указываю i2+i для более быстрой проверки кода
        input_number = i + i2
        summ += input_number
        matrix[i].append(input_number)
    matrix[i].append(summ)

# for row in matrix:
#     print(row)

used_vars3 = [matrix, summ, i, i2, input_number]
# В этой задаче было выделено 200 байт под переменные
print(f'Под переменные выделено: {size_calc(used_vars3)} байт')
